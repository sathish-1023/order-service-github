spring.application.name=order-service
server.port=0

spring.datasource.platform=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service-db
spring.datasource.username=root
spring.datasource.password=
spring.jpa-properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#spring.datasource.platform = postgresql
#spring.datasource.url = jdbc:postgresql://172.18.0.3:5431/order-service-db
#spring.datasource.driver-class-name =org.postgresql.Driver
#spring.datasource.username =postgres-order
#spring.datasource.password=password
#spring.jpa-properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

#enable actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#reslience 4j properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.SlidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4j Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4j retry properties
resilienc4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411
management.tracing.sampling.probability=1.0

#kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:com.mrParashurama.Order_Service.event.OrderPlacedEvent;